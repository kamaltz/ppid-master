generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  hashed_password String
  nama            String
  role            String?  @default("ADMIN")
  permissions     String?
  created_at      DateTime @default(now())

  @@map("admin")
}

model Pemohon {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  hashed_password String
  nama            String
  nik             String?
  no_telepon      String?
  alamat          String?
  created_at      DateTime        @default(now())
  is_approved     Boolean         @default(false)
  approved_by     String?
  approved_at     DateTime?
  pekerjaan       String?
  ktp_image       String?
  keberatan       Keberatan[]
  requests        Request[]
  usage_evidence  UsageEvidence[]

  @@map("pemohon")
}

model Ppid {
  id                 Int         @id @default(autoincrement())
  no_pegawai         String      @unique
  email              String      @unique
  hashed_password    String
  nama               String
  role               String      @default("PPID_PELAKSANA")
  permissions        String?
  created_at         DateTime    @default(now())
  assigned_keberatan Keberatan[]
  received_chats     PpidChat[]  @relation("ReceiverPpid")
  sent_chats         PpidChat[]  @relation("SenderPpid")
  assigned_requests  Request[]

  @@map("ppid")
}

model Request {
  id                        Int               @id @default(autoincrement())
  pemohon_id                Int
  judul                     String?
  rincian_informasi         String
  tujuan_penggunaan         String
  cara_memperoleh_informasi String            @default("Email")
  cara_mendapat_salinan     String            @default("Email")
  status                    String            @default("Diajukan")
  catatan_ppid              String?
  file_attachments          String?
  created_at                DateTime          @default(now())
  updated_at                DateTime          @default(now()) @updatedAt
  assigned_ppid_id          Int?
  chat_session              ChatSession?
  keberatan                 Keberatan[]
  responses                 RequestResponse[]
  usage_evidence            UsageEvidence[]
  assigned_ppid             Ppid?             @relation(fields: [assigned_ppid_id], references: [id])
  pemohon                   Pemohon           @relation(fields: [pemohon_id], references: [id])

  @@map("requests")
}

model RequestResponse {
  id           Int      @id @default(autoincrement())
  request_id   Int
  user_id      String
  user_role    String
  user_name    String
  message      String
  attachments  String?
  message_type String   @default("text")
  created_at   DateTime @default(now())
  request      Request  @relation(fields: [request_id], references: [id])

  @@map("request_responses")
}

model ChatSession {
  id         Int       @id @default(autoincrement())
  request_id Int       @unique
  is_active  Boolean   @default(true)
  ended_by   String?
  ended_at   DateTime?
  created_at DateTime  @default(now())
  request    Request   @relation(fields: [request_id], references: [id])

  @@map("chat_sessions")
}

model KategoriInformasi {
  id         Int      @id @default(autoincrement())
  nama       String   @unique
  slug       String   @unique
  deskripsi  String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("kategori_informasi")
}

model InformasiPublik {
  id                         Int       @id @default(autoincrement())
  judul                      String
  klasifikasi                String
  ringkasan_isi_informasi    String
  file_attachments           String?
  links                      String?
  tanggal_posting            DateTime  @default(now())
  pejabat_penguasa_informasi String?
  status                     String    @default("draft")
  thumbnail                  String?
  jadwal_publish             DateTime?
  images                     String?
  created_at                 DateTime  @default(now())
  updated_at                 DateTime  @default(now()) @updatedAt
  created_by                 Int?

  @@map("informasi_publik")
}

model ActivityLog {
  id         Int      @id @default(autoincrement())
  action     String
  details    String?
  user_id    String?
  user_role  String?
  ip_address String?
  user_agent String?
  created_at DateTime @default(now())
  resource   String?

  @@map("activity_logs")
}

model Keberatan {
  id               Int                 @id @default(autoincrement())
  permintaan_id    Int
  pemohon_id       Int
  judul            String?
  alasan_keberatan String
  status           String              @default("Diajukan")
  catatan_ppid     String?
  created_at       DateTime            @default(now())
  updated_at       DateTime            @default(now()) @updatedAt
  assigned_ppid_id Int?
  assigned_ppid    Ppid?               @relation(fields: [assigned_ppid_id], references: [id])
  pemohon          Pemohon             @relation(fields: [pemohon_id], references: [id])
  permintaan       Request             @relation(fields: [permintaan_id], references: [id])
  responses        KeberatanResponse[]
  usage_evidence   UsageEvidence[]

  @@map("keberatan")
}

model KeberatanResponse {
  id           Int       @id @default(autoincrement())
  keberatan_id Int
  user_id      String
  user_role    String
  user_name    String
  message      String
  attachments  String?
  message_type String    @default("text")
  created_at   DateTime  @default(now())
  keberatan    Keberatan @relation(fields: [keberatan_id], references: [id])

  @@map("keberatan_responses")
}

model Page {
  id         Int      @id @default(autoincrement())
  title      String
  slug       String   @unique
  content    String?
  thumbnail  String?
  links      String?
  status     String   @default("draft")
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("pages")
}

model Setting {
  id         Int      @id @default(autoincrement())
  key        String   @unique
  value      String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("settings")
}

model Kategori {
  id         Int      @id @default(autoincrement())
  nama       String   @unique
  deskripsi  String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("kategori")
}

model PpidChat {
  id          Int      @id @default(autoincrement())
  sender_id   Int
  receiver_id Int
  subject     String?
  message     String
  attachments String?
  is_read     Boolean  @default(false)
  created_at  DateTime @default(now())
  receiver    Ppid     @relation("ReceiverPpid", fields: [receiver_id], references: [id])
  sender      Ppid     @relation("SenderPpid", fields: [sender_id], references: [id])

  @@map("ppid_chats")
}

model UsageEvidence {
  id          Int      @id @default(autoincrement())
  request_id  Int?
  keberatan_id Int?
  pemohon_id  Int
  description String?
  attachments String?
  links       String?
  status      String   @default("Submitted")
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt
  pemohon     Pemohon  @relation(fields: [pemohon_id], references: [id])
  request     Request? @relation(fields: [request_id], references: [id])
  keberatan   Keberatan? @relation(fields: [keberatan_id], references: [id])

  @@map("usage_evidence")
}
